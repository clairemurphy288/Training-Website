{"ast":null,"code":"var _jsxFileName = \"/Users/clairemurphy/Documents/web-development/Training-Website/client/src/components/time-study/timer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport React, { Component } from 'react';\nimport \"./timer.css\";\nimport Navbar from \"../quiz/navbar/quiznavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer(props) {\n  _s();\n\n  const [date, setDate] = useState(new Date().toLocaleString());\n  const [initialTime, setInitialTime] = useState(0);\n  const [pause, setPause] = useState(\"pause\");\n  const [interval, setNewInt] = useState(0);\n  const [deltaTime, setDelta] = useState(0);\n  const [placeholder, setPlaceholder] = useState(0);\n\n  function startTimer(e) {\n    const w = Date.now();\n    setInitialTime(w);\n    console.log(\"timer started\");\n  }\n\n  useEffect(() => {\n    if (initialTime !== 0) {\n      var i = setInterval(() => {\n        const currentTime = Date.now();\n        const delta = currentTime - initialTime;\n        console.log(msToTime(delta));\n        setDate(msToTime(delta));\n      }, 1000);\n      setNewInt(i);\n    }\n  }, [initialTime]);\n\n  function pauseTimer(e) {\n    if (pause === \"pause\") {\n      setNewInt(clearInterval(interval));\n      console.log(\"pause timer\");\n      setPause(\"unpause\");\n    } else if (pause === \"unpause\") {\n      setPause(\"pause\");\n    }\n  }\n\n  useEffect(() => {\n    if (pause === \"unpause\" && interval === undefined) {\n      console.log(msToTime(deltaTime));\n    } else if (pause === \"pause\" && interval === undefined) {\n      console.log(\"the intial time: \" + initialTime);\n      console.log(\"the delta time: \" + deltaTime);\n      setInitialTime(Date.now() - deltaTime);\n    }\n  }, [pause]);\n\n  function stopTimer(e) {\n    console.log(\"stop timer\");\n    setNewInt(clearInterval(interval));\n  }\n\n  function msToTime(duration) {\n    setDelta(duration);\n    console.log(duration); // const milliseconds = parseInt((duration % 1000) / 100);\n\n    var seconds = Math.floor(duration / 1000 % 60);\n    var minutes = Math.floor(duration / (1000 * 60) % 60);\n    var hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return hours + \":\" + minutes + \":\" + seconds;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-box\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"timer\",\n            children: `${date}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            className: \"btn btn-lg  btn-primary mx-1\",\n            children: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: pauseTimer,\n            className: \"btn btn-lg btn-dark mx-1\",\n            children: pause\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            className: \"btn btn-lg btn-danger mx-1\",\n            children: \"stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"H3nEfIwnZEBFVpzUkUDVCJf1jA8=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","React","Component","Navbar","Timer","props","date","setDate","Date","toLocaleString","initialTime","setInitialTime","pause","setPause","interval","setNewInt","deltaTime","setDelta","placeholder","setPlaceholder","startTimer","e","w","now","console","log","i","setInterval","currentTime","delta","msToTime","pauseTimer","clearInterval","undefined","stopTimer","duration","seconds","Math","floor","minutes","hours"],"sources":["/Users/clairemurphy/Documents/web-development/Training-Website/client/src/components/time-study/timer.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport React, {Component} from 'react';\nimport \"./timer.css\"\nimport Navbar from \"../quiz/navbar/quiznavbar\";\nexport default function Timer(props) { \n    const [date, setDate] = useState(new Date().toLocaleString());\n    const [initialTime, setInitialTime] = useState(0);\n    const [pause, setPause] = useState(\"pause\")\n    const [interval, setNewInt] = useState(0);\n    const [deltaTime, setDelta] = useState(0);\n    const [placeholder, setPlaceholder] = useState(0);\n    function startTimer(e) {\n        const w = Date.now();\n        setInitialTime(w);\n        console.log(\"timer started\");\n    }\n    useEffect(()=> {\n        if(initialTime !== 0) {\n            var i = setInterval(()=> {\n                const currentTime = Date.now();\n                const delta = currentTime  - initialTime;\n                console.log(msToTime(delta));\n                setDate(msToTime(delta));\n    \n            }, 1000);\n            setNewInt(i)\n\n        }\n\n    },[initialTime]);\n\n\n\n    function pauseTimer(e) {\n        if (pause === \"pause\") {\n            setNewInt(clearInterval(interval));\n            console.log(\"pause timer\");\n            setPause(\"unpause\");\n\n        } else if(pause === \"unpause\") {\n            setPause(\"pause\")\n        }\n    }\n\n    useEffect(()=> {\n        if(pause === \"unpause\" && interval === undefined) {\n            console.log(msToTime(deltaTime))\n        } else if(pause === \"pause\" && interval === undefined) {\n            console.log(\"the intial time: \" + initialTime);\n            console.log(\"the delta time: \" + deltaTime);\n            setInitialTime(Date.now() - deltaTime);\n\n        }\n    },[pause]);\n\n    function stopTimer(e) {\n        console.log(\"stop timer\");\n        setNewInt(clearInterval(interval));\n\n    }\n    function msToTime(duration) {\n        setDelta(duration);\n        console.log(duration);\n        // const milliseconds = parseInt((duration % 1000) / 100);\n        var seconds = Math.floor((duration / 1000) % 60);\n        var minutes = Math.floor((duration / (1000 * 60)) % 60);\n        var hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n        \n        hours = (hours < 10) ? \"0\" + hours : hours;\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n      \n        return hours + \":\" + minutes + \":\" + seconds \n      }\n     \n\n    return (\n        <div>\n            <Navbar/>\n        <div className=\"timer-body\">\n            <div className=\"container1\">\n            <div className = \"timer-box\">\n                    <h1 id=\"timer\">{`${date}` }</h1>   \n                </div>  \n                <div className=\"d-flex justify-content-center mb-2\">\n                    \n                    <button onClick={startTimer}  className=\"btn btn-lg  btn-primary mx-1\">start</button>\n                    <button onClick={pauseTimer} className=\"btn btn-lg btn-dark mx-1\">{pause}</button>\n                    <button onClick={stopTimer} className=\"btn btn-lg btn-danger mx-1\">stop</button>\n                </div>\n                \n            </div>\n           \n        </div> </div>);\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}